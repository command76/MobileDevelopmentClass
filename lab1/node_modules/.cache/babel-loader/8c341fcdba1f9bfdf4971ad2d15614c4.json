{"ast":null,"code":"import _classCallCheck from \"/Users/AnthonyTaveras/Documents/University of Central Florida/Spring 2019/DIG 4639C Mobile Development/mobiledevelopmentlabs/lab1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/AnthonyTaveras/Documents/University of Central Florida/Spring 2019/DIG 4639C Mobile Development/mobiledevelopmentlabs/lab1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/AnthonyTaveras/Documents/University of Central Florida/Spring 2019/DIG 4639C Mobile Development/mobiledevelopmentlabs/lab1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/AnthonyTaveras/Documents/University of Central Florida/Spring 2019/DIG 4639C Mobile Development/mobiledevelopmentlabs/lab1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/AnthonyTaveras/Documents/University of Central Florida/Spring 2019/DIG 4639C Mobile Development/mobiledevelopmentlabs/lab1/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/AnthonyTaveras/Documents/University of Central Florida/Spring 2019/DIG 4639C Mobile Development/mobiledevelopmentlabs/lab1/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/AnthonyTaveras/Documents/University of Central Florida/Spring 2019/DIG 4639C Mobile Development/mobiledevelopmentlabs/lab1/src/NameForm.js\";\nimport React, { Component } from 'react';\nimport NameInput from './NameInput';\n\nvar Submit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Submit, _React$Component);\n\n  function Submit(props) {\n    var _this;\n\n    _classCallCheck(this, Submit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Submit).call(this, props));\n    _this.state = {\n      value: ''\n    }; //handleChange is an event that is supposed to set a new instance of the data entered into the text box.  I tried to store this data and\n    //compare it with a regular expression that only evaluates alphabetical characters.  But the variable would not be stored so I couldn't perform\n    //the comparison and give users an indication of whether or not their data is valid. This binds the handler so that react will recognize it.\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this))); //handleSubmit was my attempt to possibly store the information entered into the input box into an const variable but it would not work and\n    //I tried so many different things.  This binds the function so that react will recognize it.\n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //This handler is supposed to store the data entered into the text box.\n\n\n  _createClass(Submit, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    } //My attempt at getting the onsubmit to possibly store the data from the variable state.  Setting up the props in the child component and trying to\n    //use it in the parent component.\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      this.props.handleOnSubmit(event.target.value);\n    }\n  }, {\n    key: \"Render\",\n    value: function Render() {\n      var _this2 = this;\n\n      //to try to store the value entered into the textbox as a variable.  This would not work no matter what I tried.\n      var value = this.state.value; //first render of form data, rendered through child of parent.  Right now my code is completely broken.\n\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Name:\", React.createElement(NameInput, {\n        type: \"text\",\n        value: value,\n        onValueChange: function onValueChange(value) {\n          return _this2.setState({\n            value: value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Submit;\n}(React.Component);\n\nvar NameForm =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(NameForm, _React$Component2);\n\n  function NameForm(props) {\n    var _this3;\n\n    _classCallCheck(this, NameForm);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(NameForm).call(this, props));\n    _this3.state = {\n      value: ''\n    };\n    _this3.handleSubmit = _this3.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(NameForm, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var filter = new RegExp('/[a-zA-Z]*/');\n\n      if (filter == this.state.value) {\n        alert('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n      } else {\n        alert(\"wtf man!\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(Submit, {\n        handleOnSubmit: function handleOnSubmit(value) {\n          return _this4.setState({\n            value: value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return NameForm;\n}(React.Component);\n\nexport default NameForm;","map":{"version":3,"sources":["/Users/AnthonyTaveras/Documents/University of Central Florida/Spring 2019/DIG 4639C Mobile Development/mobiledevelopmentlabs/lab1/src/NameForm.js"],"names":["React","Component","NameInput","Submit","props","state","value","handleChange","bind","handleSubmit","event","setState","target","handleOnSubmit","NameForm","filter","RegExp","alert","preventDefault"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb,CAFiB,CAGjB;AACA;AACA;;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB,CANiB,CAOjB;AACA;;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AATiB;AAUlB,G,CACD;;;;;iCACaE,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaN;AAArB,OAAd;AAED,K,CACD;AACA;;;;iCACaI,K,EAAO;AAClB,WAAKN,KAAL,CAAWS,cAAX,CAA0BH,KAAK,CAACE,MAAN,CAAaN,KAAvC;AACD;;;6BAEQ;AAAA;;AACP;AACA,UAAMA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB,CAFO,CAGP;;AACA,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,MAAhB;AAAuB,QAAA,KAAK,EAAEH,KAA9B;AAAqC,QAAA,aAAa,EAAE,uBAACA,KAAD;AAAA,iBAAW,MAAI,CAACK,QAAL,CAAc;AAACL,YAAAA,KAAK,EAALA;AAAD,WAAd,CAAX;AAAA,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,EAME;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADJ;AAcC;;;;EAzCgBN,KAAK,CAACC,S;;IA8CrBa,Q;;;;;AACF,oBAAYV,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AAEA,WAAKG,YAAL,GAAoB,OAAKA,YAAL,CAAkBD,IAAlB,wDAApB;AAJiB;AAKlB;;;;iCAIYE,K,EAAO;AACpB,UAAMK,MAAM,GAAG,IAAIC,MAAJ,CAAW,aAAX,CAAf;;AACE,UAAID,MAAM,IAAI,KAAKV,KAAL,CAAWC,KAAzB,EAAgC;AAChCW,QAAAA,KAAK,CAAC,2BAA2B,KAAKZ,KAAL,CAAWC,KAAvC,CAAL;AACAI,QAAAA,KAAK,CAACQ,cAAN;AACC,OAHD,MAGO;AACHD,QAAAA,KAAK,CAAC,UAAD,CAAL;AACH;AAEF;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,MAAD;AAAQ,QAAA,cAAc,EAAE,wBAACX,KAAD;AAAA,iBAAW,MAAI,CAACK,QAAL,CAAc;AAACL,YAAAA,KAAK,EAALA;AAAD,WAAd,CAAX;AAAA,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAID;;;;EA1BkBN,KAAK,CAACC,S;;AA4B7B,eAAea,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport NameInput from './NameInput';\n\nclass Submit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n    //handleChange is an event that is supposed to set a new instance of the data entered into the text box.  I tried to store this data and\n    //compare it with a regular expression that only evaluates alphabetical characters.  But the variable would not be stored so I couldn't perform\n    //the comparison and give users an indication of whether or not their data is valid. This binds the handler so that react will recognize it.\n    this.handleChange = this.handleChange.bind(this);\n    //handleSubmit was my attempt to possibly store the information entered into the input box into an const variable but it would not work and\n    //I tried so many different things.  This binds the function so that react will recognize it.\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  //This handler is supposed to store the data entered into the text box.\n  handleChange(event) {\n    this.setState({value: event.target.value});\n\n  }\n  //My attempt at getting the onsubmit to possibly store the data from the variable state.  Setting up the props in the child component and trying to\n  //use it in the parent component.\n  handleSubmit(event) {\n    this.props.handleOnSubmit(event.target.value);\n  }\n\n  Render() {\n    //to try to store the value entered into the textbox as a variable.  This would not work no matter what I tried.\n    const value = this.state.value;\n    //first render of form data, rendered through child of parent.  Right now my code is completely broken.\n    return (\n        <form onSubmit={this.handleSubmit}>\n\n          <label>\n            Name:\n            <NameInput type=\"text\" value={value} onValueChange={(value) => this.setState({value})} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        \n        </form>\n       \n       \n\n      )\n    }\n  }\n  \n\n\nclass NameForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''};\n  \n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    \n  \n    handleSubmit(event) {\n    const filter = new RegExp('/[a-zA-Z]*/');\n      if (filter == this.state.value) {\n      alert('A name was submitted: ' + this.state.value);\n      event.preventDefault();\n      } else {\n          alert(\"wtf man!\");\n      }\n      \n    }\n  \n    render() { \n      return (\n        <Submit handleOnSubmit={(value) => this.setState({value})} />\n          \n      );\n    }\n  }\nexport default NameForm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}